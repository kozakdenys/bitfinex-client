{"version":3,"sources":["constants/dataKeys.js","helpers/getDataByKey.js","components/Loader.js","components/OrderTable/OrderTable.js","components/OrderTable/index.js","store/orderBookReducer.js","components/OrderBook/OrderBook.js","components/OrderBook/index.js","hooks/useOrderBookData.js","reportWebVitals.js","index.js"],"names":["dataKeys","price","count","amount","total","getDataByKey","key","Loader","width","version","id","xmlns","xlink","x","y","viewBox","enableBackground","xmlSpace","fill","d","attributeName","attributeType","type","dur","from","to","repeatCount","OrderTable","columns","rows","useMemo","reduce","row","index","push","className","map","column","data","Math","round","length","colSpan","initialState","bids","asks","holdingData","reducer","state","action","payload","newBids","newAsks","forEach","Array","isArray","slice","arrayToUpdate","findIndex","sort","a","b","splice","Error","OrderBook","url","pair","useState","Date","lastUpdateDate","setLastUpdateDate","useReducer","dispatch","useEffect","chanelId","ws","WebSocket","outMsg","event","channel","onopen","send","JSON","stringify","onmessage","e","inMsg","parse","chanId","close","setTimeout","useOrderBookData","bookBids","bookAsks","bidsColumns","asksColumns","reverse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb2b1e26.chunk.js","sourcesContent":["const dataKeys = {\n  price: \"PRICE\",\n  count: \"COUNT\",\n  amount: \"AMOUNT\",\n  total: \"TOTAL\"\n};\n\nexport default dataKeys\n","import dataKeys from \"../constants/dataKeys\";\n\nexport default function getDataByKey([price, count, amount], key) {\n  return {\n    [dataKeys.price]: price,\n    [dataKeys.count]: count,\n    [dataKeys.amount]: amount,\n  }[key]\n}\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <svg width={60} version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n         viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 0 0\" xmlSpace=\"preserve\">\n        <path fill=\"#fff\" d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"1s\"\n            from=\"0 50 50\"\n            to=\"360 50 50\"\n            repeatCount=\"indefinite\" />\n      </path>\n    </svg>\n  )\n};\n\nexport default Loader\n","import React, { useMemo } from 'react';\nimport dataKeys from '../../constants/dataKeys';\nimport getDataByKey from '../../helpers/getDataByKey';\nimport Loader from '../Loader';\n\nimport './OrderTable.css';\n\nfunction OrderTable({ columns, rows }) {\n  const total = useMemo(() => rows.reduce((total, row, index) => {\n    total.push((total[index - 1] || 0) + getDataByKey(row, dataKeys.amount));\n    return total;\n  }, []), [rows]);\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr className=\"table__row\">\n          {columns.map(column => (\n            <th\n              key={column}\n              className={`table__cell table__cell--header ${column === dataKeys.count ? \"table__cell--center\" : ''}`}\n            >\n              {column}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n      {rows.map((row, index) => (\n        <tr key={getDataByKey(row, dataKeys.price)} className=\"table__row\">\n          {columns.map(column => {\n            let data;\n\n            if (column === dataKeys.price) {\n              data = getDataByKey(row, column) / 1000\n            } else if (column === dataKeys.amount) {\n              data = Math.round(getDataByKey(row, column) * 10000) / 10000\n            } else if (column === dataKeys.total) {\n              data = Math.round(total[index] * 10000) / 10000\n            } else {\n              data = getDataByKey(row, column)\n            }\n            return (\n              <td\n                key={column}\n                className={`table__cell ${column === dataKeys.count ? \"table__cell--center\" : ''}`}\n              >\n                {data}\n              </td>\n            )\n          })}\n        </tr>\n      ))}\n      {rows.length === 0 && (\n        <tr className=\"table__row\">\n          <td className=\"table__cell table__cell--center\" colSpan={columns.length}>\n            <Loader />\n          </td>\n        </tr>\n      )}\n      </tbody>\n    </table>\n  );\n}\n\nexport default OrderTable;\n","import OrderTable from './OrderTable.js';\nexport default OrderTable;\n","import getDataByKey from '../helpers/getDataByKey';\nimport dataKeys from '../constants/dataKeys';\n\nexport const initialState = { bids: [], asks: [], holdingData: [] };\n\nexport default function reducer(state, action) {\n  const { bids, asks, holdingData } = state;\n  const { payload, type } = action;\n\n  switch (type) {\n    case 'ADD_HOLDING_DATA': {\n      return {\n        ...state,\n        holdingData: [\n          ...holdingData,\n          payload\n        ]\n      };\n    }\n    case 'SAVE_HOLDING_DATA': {\n      let newBids = bids;\n      let newAsks = asks;\n\n      holdingData.forEach(payload => {\n        if (Array.isArray(payload[0])) {\n          //snapshot\n          newBids = payload.slice(0, payload.length / 2);\n          newAsks = payload.slice(-payload.length / 2);\n        } else {\n          //update\n          let arrayToUpdate;\n\n          //is it bids or asks\n          if (getDataByKey(payload, dataKeys.amount) > 0) {\n            newBids = [...newBids];\n            arrayToUpdate = newBids;\n          } else {\n            newAsks = [...newAsks];\n            arrayToUpdate = newAsks;\n          }\n\n          const index = arrayToUpdate.findIndex(([price]) => price === getDataByKey(payload, dataKeys.price));\n\n          if (index === -1) {\n            //if the new item - add to the end and sort\n            arrayToUpdate.push(payload);\n            arrayToUpdate.sort((a, b) => getDataByKey(b, dataKeys.price) - getDataByKey(a, dataKeys.price))\n          } else if (getDataByKey(payload, dataKeys.count) === 0) {\n            //if count 0 - remove item from the array\n            arrayToUpdate.splice(index, 1);\n          } else {\n            //if item already exists - update it\n            arrayToUpdate[index] = payload;\n          }\n        }\n      });\n\n      return {\n        bids: newBids,\n        asks: newAsks,\n        holdingData: []\n      };\n    }\n    default:\n      throw new Error();\n  }\n}\n","import React from \"react\";\nimport OrderTable from '../OrderTable';\nimport useOrderBookData from '../../hooks/useOrderBookData';\nimport dataKeys from '../../constants/dataKeys';\nimport './OrderBook.css';\n\nfunction OrderBook() {\n  const [bookBids, bookAsks] = useOrderBookData(\"wss://api-pub.bitfinex.com/ws/2\",'tBTCUSD');\n  const bidsColumns = [dataKeys.count, dataKeys.amount, dataKeys.total, dataKeys.price];\n  const asksColumns = [...bidsColumns].reverse();\n\n  return (\n    <div className=\"book__container\">\n      <OrderTable columns={bidsColumns} rows={bookBids}/>\n      <OrderTable columns={asksColumns} rows={bookAsks}/>\n    </div>\n\n  );\n}\n\nexport default OrderBook;\n","import OrderBook from './OrderBook.js';\nexport default OrderBook;\n","import { useEffect, useReducer, useState } from 'react';\nimport reducer, { initialState } from '../store/orderBookReducer';\n\nexport default function useOrderBookData(url, pair) {\n  const [lastUpdateDate, setLastUpdateDate] = useState(new Date());\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //create websocket\n  useEffect(() => {\n    let chanelId;\n    const ws = new WebSocket(url);\n    const outMsg = {\n      event: 'subscribe',\n      channel: 'book',\n      pair\n    };\n    ws.onopen = () => ws.send(JSON.stringify(outMsg));\n    ws.onmessage = e => {\n      const inMsg = JSON.parse(e.data);\n\n      if (!inMsg) return;\n\n      if (!chanelId) {\n        //info message\n        if (typeof inMsg === 'object' && inMsg.event === 'subscribed' && inMsg.channel === outMsg.channel) {\n          chanelId = inMsg.chanId\n        }\n      } else {\n        //data message\n        if (Array.isArray(inMsg) && inMsg[0] === chanelId && Array.isArray(inMsg[1])) {\n          dispatch({ type: 'ADD_HOLDING_DATA', payload: inMsg[1] });\n        }\n      }\n    };\n\n    return () => ws.close();\n  }, [dispatch, url, pair]);\n\n  //trigger state update every 500 milliseconds\n  useEffect(() => {\n    setTimeout(() => {\n      setLastUpdateDate(new Date());\n      dispatch({ type: 'SAVE_HOLDING_DATA' });\n    }, 500)\n  }, [dispatch, lastUpdateDate]);\n\n  return [state.bids, state.asks];\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport OrderBook from './components/OrderBook';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <OrderBook />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}